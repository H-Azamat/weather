{"version":3,"sources":["api/api.js","components/Search/Search.jsx","assets/sun.svg","assets/cloud.svg","assets/rainy.svg","assets/snowy.svg","assets/drizzle.svg","components/WeatherCard/WeatherCard.jsx","components/Weather/Weather.jsx","App.js","index.js"],"names":["instance","axios","baseURL","API_KEY","WeatherApi","lat","lon","get","then","res","data","city","Seacrh","getWeather","onSubmit","e","preventDefault","target","value","noValidate","autoComplete","TextField","id","label","variant","size","fullWidth","useStyles","makeStyles","card","width","marginTop","padding","cardImg","height","marginRight","cardContent","WeatherCard","temp","feelsLike","description","weather","useState","weatherImg","setWeatherImg","useEffect","snowy","cloud","drizzle","rainy","sun","classes","Card","raised","className","CardContent","Box","fontWeight","align","fontSize","letterSpacing","display","justifyContent","alignItems","src","alt","component","textAlign","Weather","props","flexDirection","App","setCity","setTemp","setFeelsLike","setDescription","setWeather","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","name","main","Math","round","feels_like","catch","alert","searchCity","a","error","message","Container","maxWidth","bind","this","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bbdeb2a.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:\"http://api.openweathermap.org/data/2.5/\"\r\n})\r\n\r\nconst API_KEY = 'f37933e3e4d8fafe41b8ac27a02772ab';\r\n\r\nexport const WeatherApi = {\r\n    getWeatherByCord(lat, lon){\r\n        return instance.get(`weather?lat=${lat}&lon=${lon}&units=metric&lang=ru&appid=${API_KEY}`).then(res => res.data);\r\n    },\r\n    getWeatherByCity(city){\r\n        return instance.get(`weather?q=${city}&lang=ru&units=metric&appid=${API_KEY}`).then(res => res.data);\r\n        \r\n    }\r\n}","import { TextField } from '@material-ui/core';\r\n\r\nconst Seacrh = ({getWeather}) => {\r\n\treturn (\r\n\t\t<form onSubmit={(e) => {\r\n\t\t\te.preventDefault()\r\n\t\t\tgetWeather(e.target[0].value)\r\n\t\t\te.target[0].value = '';\r\n\t\t}} noValidate autoComplete=\"off\">\r\n\t\t  <TextField id=\"outlined-basic\" label=\"Введите город\" variant=\"outlined\" size=\"small\" fullWidth />\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default Seacrh;","export default __webpack_public_path__ + \"static/media/sun.4eccead1.svg\";","export default __webpack_public_path__ + \"static/media/cloud.fcffee55.svg\";","export default __webpack_public_path__ + \"static/media/rainy.b1c4d2b1.svg\";","export default __webpack_public_path__ + \"static/media/snowy.b349810c.svg\";","export default __webpack_public_path__ + \"static/media/drizzle.767428d2.svg\";","import { Box, Card, CardContent } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport sun from '../../assets/sun.svg';\r\nimport cloud from '../../assets/cloud.svg';\r\nimport rainy from '../../assets/rainy.svg';\r\nimport snowy from '../../assets/snowy.svg';\r\nimport drizzle from '../../assets/drizzle.svg';\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '400px',\r\n        marginTop: '30px',\r\n        padding: '10px 0'\r\n    },\r\n    cardImg: {\r\n        height: '100px',\r\n        marginRight: '20px'\r\n    },\r\n    cardContent: {\r\n        padding: '20px 0'\r\n    },\r\n})\r\n\r\n\r\nconst WeatherCard = ({city, temp, feelsLike, description, weather}) => {\r\n\r\n    let [weatherImg, setWeatherImg] = useState();\r\n    useEffect(() => {\r\n        switch(weather){\r\n            case 'Snow': setWeatherImg(snowy); break;\r\n            case 'Clouds': setWeatherImg(cloud); break; \r\n            case 'Drizzle': setWeatherImg(drizzle); break;\r\n            case 'Rain': setWeatherImg(rainy); break;\r\n            case 'Clear': setWeatherImg(sun); break;\r\n            default: setWeatherImg(sun); \r\n        }\r\n    }, [weather])\r\n\r\n    const classes = useStyles();\r\n    if(city){ \r\n        return(\r\n            <Card raised className={classes.card}>\r\n                <CardContent>\r\n                    <Box fontWeight=\"fontWeightBold\" align=\"center\" fontSize={32} letterSpacing={1.5}>{city}</Box>\r\n\r\n                    <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" className={classes.cardContent}>\r\n                        <img src={weatherImg} alt={weather} className={classes.cardImg} />\r\n                        <Box component=\"span\" textAlign=\"center\" fontWeight=\"fontWeightBold\" fontSize={42}>{temp}&#8451;</Box>\r\n                    </Box>\r\n\r\n                    <Box textAlign=\"center\" fontWeight=\"fontWeightRegular\" fontSize={20}>{description}</Box>\r\n                    <Box textAlign=\"center\" fontWeight=\"fontWeightRegular\" fontSize={19}>Ощущается как: {feelsLike}&#8451;</Box>\r\n\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }else{\r\n     return <Box component=\"span\" textAlign=\"center\" fontWeight=\"fontWeightBold\" fontSize={42}>Выберите город</Box>\r\n    }\r\n}\r\n\r\nexport default WeatherCard;","import { Box } from '@material-ui/core';\r\n\r\nimport WeatherCard from '../WeatherCard/WeatherCard';\r\n\r\nconst Weather = (props) => {\r\n\treturn (\r\n\t\t<Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n\t\t\t<WeatherCard {...props} />\r\n\t\t</Box>\r\n\t)\r\n}\r\n\r\nexport default Weather;","import { Container } from '@material-ui/core';\nimport { useState, useEffect } from 'react';\nimport { WeatherApi } from './api/api';\n\nimport './App.css';\n\nimport Seacrh from './components/Search/Search';\nimport Weather from './components/Weather/Weather';\n\nfunction App() {\n\n  let [city, setCity] = useState('');\n  let [temp, setTemp] = useState(0);\n  let [feelsLike, setFeelsLike] = useState(0);\n  let [description, setDescription] = useState('');\n  let [weather, setWeather] = useState('');\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((pos) => {\n      WeatherApi.getWeatherByCord(pos.coords.latitude, pos.coords.longitude).then(res => {\n        setCity(res.name)\n        setDescription(res.weather[0].description)\n        setWeather(res.weather[0].main)\n        setTemp(Math.round(res.main.temp))\n        setFeelsLike(Math.round(res.main.feels_like));\n      })\n      .catch(() => {\n        alert('sdaksda')\n      })\n    })\n  }, [])\n\n  const getWeather = async (searchCity) => {\n    if(searchCity){\n      WeatherApi.getWeatherByCity(searchCity).then(res => {\n        setCity(res.name)\n        setDescription(res.weather[0].description)\n        setWeather(res.weather[0].main)\n        setTemp(Math.round(res.main.temp))\n        setFeelsLike(Math.round(res.main.feels_like));\n      })\n      .catch((error) => {\n        if(error.message === 'Request failed with status code 404'){\n          alert('Название города написан не правильно или такого города не существует, проверьте пожалуйста')\n        } \n      })\n    }\n  }\n\n  useEffect(() => {}, [city])\n\n  //88 925-11-61\n  return (\n    <div className=\"App\">\n      <Container maxWidth=\"md\">\n      \t<Seacrh getWeather={getWeather.bind(this)} />\n        <Weather city={city} temp={temp} feelsLike={feelsLike} description={description} weather={weather} />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <App />, document.getElementById('root') );"],"sourceRoot":""}